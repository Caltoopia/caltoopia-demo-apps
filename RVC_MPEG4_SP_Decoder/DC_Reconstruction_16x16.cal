/* 
 * Copyright (c) Ericsson AB, 2013
 * All rights reserved.
 *
 * License terms:
 *
 * Redistribution and use in source and binary forms, 
 * with or without modification, are permitted provided 
 * that the following conditions are met:
 *     * Redistributions of source code must retain the above 
 *       copyright notice, this list of conditions and the 
 *       following disclaimer.
 *     * Redistributions in binary form must reproduce the 
 *       above copyright notice, this list of conditions and 
 *       the following disclaimer in the documentation and/or 
 *       other materials provided with the distribution.
 *     * Neither the name of the copyright holder nor the names 
 *       of its contributors may be used to endorse or promote 
 *       products derived from this software without specific 
 *       prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

namespace RVC:

import RVC.MPEG4_algo_DCRaddressing_16x16;
import RVC.MPEG4_algo_DCRinvpred_luma_16x16;

network DC_Reconstruction_16x16 (
		int DCVAL, 
		int MAXW_IN_MB, 
		int MB_COORD_SZ, 
		int BTYPE_SZ, 
		int SAMPLE_SZ, 
		int NEWVOP, 
		int INTRA, 
		int INTER, 
		int QUANT_MASK, 
		int ACCODED, 
		int ACPRED, 
		int QUANT_SZ) 
	
	int BTYPE, int QFS_DC, int QP ==> int PTR, int AC_PRED_DIR, bool SIGNED, int QF_DC, int QUANT, int PREV_QUANT:

	entities
    	addressing = MPEG4_algo_DCRaddressing_16x16(BTYPE_SZ = BTYPE_SZ, INTRA = INTRA, MAXW_IN_MB = MAXW_IN_MB, MB_COORD_SZ = MB_COORD_SZ, NEWVOP = NEWVOP);
		invpred = MPEG4_algo_DCRinvpred_luma_16x16(ACCODED = ACCODED, ACPRED = ACPRED, BTYPE_SZ = BTYPE_SZ, DCVAL = 128*8, INTER = INTER, INTRA = INTRA, MAXW_IN_MB = MAXW_IN_MB, MB_COORD_SZ = MB_COORD_SZ, NEWVOP = NEWVOP, QUANT_MASK = QUANT_MASK, QUANT_SZ = QUANT_SZ, SAMPLE_SZ = SAMPLE_SZ);
		
	structure	
    	BTYPE 	--> addressing.BTYPE;
		BTYPE 	--> invpred.BTYPE;
		QFS_DC 	--> invpred.QFS_DC;
		addressing.A --> invpred.A;
		addressing.B --> invpred.B;
		addressing.C --> invpred.C;
		invpred.PTR --> PTR;
		invpred.AC_PRED_DIR --> AC_PRED_DIR;
		invpred.SIGNED --> SIGNED;
		invpred.QF_DC --> QF_DC;
		invpred.QUANT --> QUANT;
		QP --> invpred.QP;
		invpred.PREV_QUANT --> PREV_QUANT;
end
end