// MPEG4_algo_Add.cal
//
// Author: David B. Parlour (dave.parlour@xilinx.com)
// Modified by: Christophe Lucarz (christophe.lucarz@epfl.ch)
//
// Copyright (c) 2004-2005 Xilinx Inc.
// All Rights Reserved
//
// Disclaimer:  THIS PROGRAM IS PROVIDED "AS IS" WITH NO WARRANTY 
//              WHATSOEVER AND XILINX SPECIFICALLY DISCLAIMS ANY 
//              IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//              A PARTICULAR PURPOSE, OR AGAINST INFRINGEMENT.

// Add motion and texture to produce pixels

namespace RVC:

import System.bitops.bitand;
import System.util.Integers;

actor MPEG4_algo_Add (int PIX_SZ, int MB_COORD_SZ, int BTYPE_SZ, int NEWVOP, int INTRA, int ACCODED)
                      
   int(size=PIX_SZ) MOT, int(size=PIX_SZ) TEX, int(size=BTYPE_SZ) BTYPE ==> int(size=PIX_SZ) VID :

  cmd.newVop: action BTYPE:[ cmd ] ==>
  guard
    bitand( cmd, NEWVOP ) != 0
  end

  // Pure texture
  cmd.textureOnly: action BTYPE:[ cmd ] ==>
  guard
    bitand( cmd, INTRA ) != 0
  end

  // Pure motion
  cmd.motionOnly: action BTYPE:[ cmd ] ==>
  guard
    bitand( cmd, ACCODED ) = 0
  end

  // Mixed texture and motion
  // (Also used to skip vop w,h)
  cmd.other: action BTYPE:[ cmd ] ==>
  end

  texture: action TEX:[ tex ] repeat 64 ==> VID:[ tex ] repeat 64
  end

  motion: action MOT:[mot] repeat 64 ==> VID:[ mot ] repeat 64
  end

  combine: action MOT:[mot] repeat 64, TEX:[ tex ] repeat 64 ==> VID:[ [
  		if tex[i] + mot[i] < 0 
  		then 0 
  		else if tex[i] + mot[i] > 255 
  			 then 255 
  			 else tex[i] + mot[i] 
  			 end 
  		end : for int i in Integers(0,63)]] repeat 64
  end

  schedule fsm cmd:
    cmd          ( cmd.newVop        ) --> skipw;
    cmd          ( cmd.textureOnly   ) --> texture;
    cmd          ( cmd.motionOnly    ) --> motion;
    cmd          ( cmd.other         ) --> combine;

    texture      ( texture           ) --> cmd;
    motion       ( motion            ) --> cmd;
    combine      ( combine           ) --> cmd;

    skipw        ( cmd.other         ) --> skiph;
    skiph        ( cmd.other         ) --> cmd;
  end

  priority
    cmd.newVop > cmd.textureOnly > cmd.motionOnly > cmd.other;
  end
 end
end