// GEN_algo_Clip.cal
//
// Author: David B. Parlour (dave.parlour@xilinx.com)
//
// Copyright (c) 2004-2005 Xilinx Inc.
// All Rights Reserved
//
// Disclaimer:  THIS PROGRAM IS PROVIDED "AS IS" WITH NO WARRANTY 
//              WHATSOEVER AND XILINX SPECIFICALLY DISCLAIMS ANY 
//              IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//              A PARTICULAR PURPOSE, OR AGAINST INFRINGEMENT.

// Author: Matthieu Wipliez (mwipliez@insa-rennes.fr)
// Rewrote the actor at block-level

// Limit pixel value to either [0,255] or [-255,255]

namespace RVC:

import System.util.Integers;

 actor Clip ( int isz, int osz ) int(size=isz) I, bool SIGNED ==> int(size=osz) O :

  bool sflag;
  

  read_signed: action SIGNED:[s] ==>
  do
    sflag := s;
  end

  clip: action I:[ x ] repeat 64 ==> O: [
    [ if x[i] > 255 then
        255
      else
        if (not sflag) and x[i] < 0 then
          0
        else
          if x[i] < -255 then
            -255
          else
            x[i]
          end
        end
      end : for int i in Integers(0, 63) ] ] repeat 64
  end     

  schedule fsm set_sign:
    set_sign (read_signed) --> clip;
    clip (clip) --> set_sign;
  end
 end
end
